
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Actividad_4(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [31:0] i1;
wire [31:0] i2;
wire [31:0] o1;
wire [31:0] o2;

wire [7:0] rout;
wire [7:0] sopcOut;
wire [27:0] res;
wire [3:0] unit;
wire [3:0] tens;
wire [3:0] hunds;
wire [6:0] seg1;
wire [6:0] seg2;
wire [6:0] seg3;
//=======================================================
//  Structural coding
//=======================================================
register r(
	.clk(KEY[1]),
	.in(SW[7:0]),
	.out(rout[7:0])
);


assign LEDR[0] = sopcOut[0];
assign LEDR[1] = sopcOut[1];
assign LEDR[2] = sopcOut[2];
assign LEDR[3] = sopcOut[3];
assign LEDR[4] = sopcOut[4];
assign LEDR[5] = sopcOut[5];
assign LEDR[6] = sopcOut[6];
assign LEDR[7] = sopcOut[7];
	
C c(
	.N1(o1[7:0]),
	.N2(o1[15:8]),
	.N3(o1[23:16]),
	.N4(o1[31:24]),
	.N5(o2[7:0]),
	.N6(o2[15:8]),
	.N7(o2[23:16]),
	.N8(o2[31:24]),
	.S1(i1[7:0]),
	.S2(i1[15:8]),
	.S3(i1[23:16]),
	.S4(i1[31:24]),
	.S5(i2[7:0]),
	.S6(i2[15:8]),
	.S7(i2[23:16]),
	.S8(i2[31:24])
);
	
unsaved u0 (
  .clk_clk                          (CLOCK_50),                          //                       clk.clk
  .pio_0_external_connection_export (i1[31:0]), // pio_0_external_connection.export
  .pio_1_external_connection_export (i2[31:0]), // pio_1_external_connection.export
  .pio_2_external_connection_export (o1[31:0]), // pio_2_external_connection.export
  .pio_3_external_connection_export (o2[31:0]), // pio_3_external_connection.export
  .pio_4_external_connection_export (rout[7:0]), // pio_4_external_connection.export
  .pio_5_external_connection_export (sopcOut[7:0]), // pio_5_external_connection.export
  .reset_reset_n                    (KEY[0])                     //                     reset.reset_n
);


conversor conv(
	.N(sopcOut[7:0]),
	.S(res[9:0]),
	.S1(seg1[6:0]),
	.S2(seg2[6:0]),
	.S3(seg3[6:0])
);

assign HEX0 = seg1;
assign HEX1 = seg2;
assign HEX2 = seg3;
endmodule
